pipeline {
    agent any

    environment {
        GIT_URL = 'https://github.com/Jasp3rGit/Continuous-Delivery-with-Docker-and-Jenkins-Second-Edition.git'
        REGISTRY = 'localhost:5001'
        DOCKER_CREDENTIALS = 'docker-registry' // Ensure this exists in Jenkins
    }

    stages {
        stage('Checkout Code') {
            steps {
                git url: env.GIT_URL, branch: env.BRANCH_NAME
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    if (env.BRANCH_NAME == 'main') {
                        echo "Running Code Coverage on main branch"
                        sh """
                        cd Chapter08/sample1
                        chmod +x gradlew
                        ./gradlew test jacocoTestReport jacocoTestCoverageVerification || true
                        """
                    } else if (env.BRANCH_NAME == 'feature') {
                        echo "Running Unit & Integration Tests on feature branch"
                        sh """
                        cd Chapter08/sample1
                        chmod +x gradlew
                        ./gradlew test checkstyleMain || true
                        """
                    } else {
                        echo "Running tests on playground branch"
                        sh """
                        cd Chapter08/sample1
                        chmod +x gradlew
                        ./gradlew test || true
                        """
                    }
                }
            }
        }

        stage('Check Test Results') {
            steps {
                script {
                    def testResult = sh(script: "grep -i 'FAILED' Chapter08/sample1/build/reports/tests/test/index.html", returnStatus: true)
                    if (testResult == 0) {
                        echo "Tests failed! Failing the build..."
                        error "Test failures detected!"
                    } else {
                        echo "Tests passed!"
                    }
                }
            }
        }

        stage('Build & Push Container') {
            when {
                expression { env.BRANCH_NAME != 'playground' }
            }
            steps {
                script {
                    def imageName = env.BRANCH_NAME == 'main' ? 'calculator' : 'calculator-feature'
                    def version = env.BRANCH_NAME == 'main' ? '1.0' : '0.1'

                    //changed directory
                    sh """
                    cd Chapter08/sample1
                    docker --version
                    docker build -t ${env.REGISTRY}/${imageName}:${version} .
                    echo "Logging into Docker Registry"
                    docker login ${env.REGISTRY} -u testuser -p testpassword
                    docker push ${env.REGISTRY}/${imageName}:${version}
                    """
                }
            }
        }
    }
}
